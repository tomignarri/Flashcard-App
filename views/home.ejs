<% include ./partials/header %>
    
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-lg-4 pt-3" align="center">
          <button id = "displayFlashcards" class="btn btn-outline-dark">Start Learning</button>
        </div>
      </div>
      <div class="row justify-content-center">
        <div class="col-lg-4 py-1" align="center">
          <span id="displayFlashcardCount">0</span>
          <span>
          /
          </span>
          <span id="displayFlashcardTotal">0</span>
        </div>
      </div> 
    </div>
    
    <!-- Flashcard and next/previous buttons -->
    <div class = "container mb-5">
      <div class="row">
        <div class="col-1 col-sm-2 col-lg-3 mx-0 px-0 d-flex justify-content-end align-self-center">
          <button id = "previousFlashcard" class="btn btn-outline-dark btn-lg">
          <i class="fas fa-angle-left"></i>
          </button>
        </div>
        <div class="col-10 col-sm-8 col-lg-6">
          <div id = "displayFlashcard">
            <span id = "clickableFlashcardDisplay">
              <p id = "flashcardDisplayArea" ></p>
            </span>
          </div>
        </div>
        <div class="col-1 col-sm-2 col-lg-3 mx-0 px-0 d-flex justify-content-start align-self-center">
          <button id = "nextFlashcard"  class="btn btn-outline-dark btn-lg">
          <i class="fas fa-angle-right"></i></button>
        </div>
      </div>
    </div>

   
    <!-- Section to view online translation -->
    <div class="container">
      <div class="row">
          <div class="col-lg-12 p-0">
            <button 
              class="btn btn-outline-dark btn-sm mb-1"
              id = "accessGoogleTranslateButton">Make Request</button>
            <div class="row m-0 p-0">
              <div id="googleTranslateOutput" class="col-lg-12 m-0">
              </div>
            </div>
          </div>
      </div>
    </div>

    <script>
    // Overall list of flashcards.
var flashcardList = {
  
  flashcards: [],
  
  // Adds a flashcard object to Flashcard array.
  addFlashcard: function(fcTextQuestion, fcTextTranslated) {
    this.flashcards.push({
      fcTextQuestion: fcTextQuestion,
      fcTextTranslated: fcTextTranslated
    });
  }, 
  
};

var flashcardsDB = <%- JSON.stringify(flashcardsDB) %>;
console.log("the DB:", flashcardsDB);

flashcardsDB.forEach(function(fcardDbToAdd){
  flashcardList.addFlashcard(fcardDbToAdd.question, fcardDbToAdd.translation);
});

console.log("the rest:",flashcardList.flashcards);



var currentFlashcard = 0;

// Handle button functionality.
var handlers = {
  
  isFlipped: false,
  
  // Receives Input.
  addFlashcard: function() {
    var addFlashcardQuestionInput = document.getElementById('addFlashcardQuestionInput');
    var addFlashcardTranslationInput = document.getElementById('addFlashcardTranslationInput');
    //var displayFlashcardCount = document.querySelector("#displayFlashcardCount");
    
    // Trim any values entered to avoid entering spaces and for user QOF.
    addFlashcardQuestionInput.value.trim();
    addFlashcardTranslationInput.value.trim();
    
    // This only runs the rest of the function if the forms have content.
    if(addFlashcardQuestionInput.value || addFlashcardTranslationInput.value){
    // Invoke addFlashcard function from flashcardList object.
    flashcardList.addFlashcard(addFlashcardQuestionInput.value, addFlashcardTranslationInput.value);
    
    // CLear the input fields.
    addFlashcardQuestionInput.value = '';
    addFlashcardTranslationInput.value = '';
      
    document.querySelector("#displayFlashcardTotal").textContent = flashcardList.flashcards.length;

    console.dir(flashcardList.flashcards);

    }  
  },
  
  
  displayGoogleTranslate: function() {
    var request = new XMLHttpRequest();

    request.open('GET', 'https://ghibliapi.herokuapp.com/films', true);

    request.onload = function() {
      // Begin accessing JSON data here
      var data = JSON.parse(this.response)

      if (request.status >= 200 && request.status < 400) {
        data.forEach(movie => {
          console.log(movie.title)
        })
      } else {
        console.log('error')
      };
    };

    // Send request
    request.send();
  },
  
  
  // Flip flashcard when the user presses the flashcard.
  displayFlashcard: function(flashcardNumber){
    console.log("FLIPPED: ", this.isFlipped);
    
    // Notify the user that they have no flashcards.
    if(flashcardList.flashcards === undefined || flashcardList.flashcards.length == 0){
      window.alert("You have no flashcards!");
      return;
    }
    
    if(this.isFlipped){
      document.getElementById("flashcardDisplayArea").innerHTML = flashcardList.flashcards[flashcardNumber].fcTextTranslated;
      document.getElementById("displayFlashcard").style.backgroundColor = "lightgreen";
    } else {
      //this.displayFlashcards(currentFlashcard);
      document.getElementById("flashcardDisplayArea").innerHTML = flashcardList.flashcards[flashcardNumber].fcTextQuestion;
      document.getElementById("displayFlashcard").style.backgroundColor = "white";
    }
    
    // Show current flashcard index.
    document.querySelector("#displayFlashcardCount").textContent = (currentFlashcard + 1);
    
  },
};



// Other functions...spot to add event listeners later
var view = {
  
  // Receive events from clicks and run functions from handlers.
  setUpEventListeners: function(){
    console.log("setUp ran"); 
    
    // Get the modal
    var modal = document.getElementById("myModal");

    // Get the button that opens the modal
    var modalButton = document.getElementById("modalButton");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];
    
    // Variables representing button objects on the DOM.
    var displayFlashcardsButton = document.getElementById("displayFlashcards");
    var nextFlashcardButton = document.getElementById("nextFlashcard");
    var previousFlashcardButton = document.getElementById("previousFlashcard");
    var flipFlashcardButton = document.getElementById("clickableFlashcardDisplay");
    var accessGoogleTranslate = document.getElementById("accessGoogleTranslateButton");
    //var displayFlashcardNumber = document.querySelector("#displayFlashcardCount");
    
  
    flipFlashcardButton.addEventListener("click", function(){
      handlers.isFlipped = !handlers.isFlipped;  
      handlers.displayFlashcard(currentFlashcard);
    });
  
    // // When the user clicks on the button, open the modal
    // modalButton.onclick = function() {
    //   modal.style.display = "block";
    //   handlers.displayFlashcardList();
    // }

    // // When the user clicks on <span> (x), close the modal
    // span.onclick = function() {
    //   modal.style.display = "none";
    // }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }

    // The conditional here checks that the button exists on the DOM.
    if(displayFlashcardsButton){
      console.log("display button pressed");  
      displayFlashcardsButton.addEventListener("click", function() {
        handlers.isFlipped = false;
        handlers.displayFlashcard(currentFlashcard);
      });
    }
    
    accessGoogleTranslate.addEventListener("click", function() {
      handlers.displayGoogleTranslate();
    });
    
    nextFlashcardButton.addEventListener("click", function() {
      
      // Prevent using from iterating card count before displaying cards.
      if(document.querySelector("#flashcardDisplayArea").innerHTML === ''){
        window.alert("Press get started button first");
        return;
      }
      currentFlashcard++;
      handlers.isFlipped = false;
      if(currentFlashcard === flashcardList.flashcards.length){
        currentFlashcard = 0;
        //currentFlashcard = flashcardList.flashcards.length - 1; 
        handlers.displayFlashcard(currentFlashcard);
      } else {
        handlers.displayFlashcard(currentFlashcard);
      }
    });
    
    previousFlashcardButton.addEventListener("click", function() {
      
      // Prevent using from iterating card count before displaying cards.
      if(document.querySelector("#flashcardDisplayArea").innerHTML === ''){
        window.alert("Press get started button first");
        return;
      }
      currentFlashcard--;
      handlers.isFlipped = false;
      if(currentFlashcard < 0){
        currentFlashcard = flashcardList.flashcards.length - 1; 
        handlers.displayFlashcard(currentFlashcard);
      } else {
        handlers.displayFlashcard(currentFlashcard);
      }
    });
  },
  
  // createCheckbox: function(){
	// 	var checkboxInput = document.createElement('input');
  //   checkboxInput.setAttribute("type", "checkbox");
  //   checkboxInput.className = 'checkboxInput';
  //   return checkboxInput;
	// },
  
};


view.setUpEventListeners();



    </script>
 
    
    <% include ./partials/footer %>